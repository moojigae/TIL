``` css
*,*::before,*::after{
  box-sizing: border-box;
}
body{
  background-color: #fff; /* bgc */
  margin: 0;
}
h2{
  margin: 0;
  font-size: 1em;
  font-weight: normal;
}
/* 레이라웃 */
/* DOM Tree 구성 / 자식요소들이 먼저 보임 */
/* .을 찍으면 클래스 .이 없으면 태그를 찾는다 */
.wrapper{
background: yellow;
/* width: 800px; */
/* border: 10px dotted #000; */
/* margin: 0 auto; */
/* margin에만 auto 속성값을 줄 수 있다 */
/* padding: 50px; */
/* padding 옵션 2개 일 때 : 위아래값 좌우값
               3개 일 때 : 위값 좌우값 아래값
               4개 일 때 : 위 우 아래 좌  */
/* box-sizing: border-box;                */
/* border-top: 10px solid black; */
/* 해당 설정을 하지 않으면 margin은 투명하기 때문에 배경인 노란색이 보이지 않지만 속성을 주면 투과할 수 없는 선이 생기므로 배경인 노란색이 보인다 */
}
/* .button{
  background: pink;
} */
.header, .visual, .main, .slogan, .footer{
width: 940px;
margin: 0 auto;
}
.header{
  background: pink;
  /* margin: 50px 0; */
  height: 10vh;
}
.visual{
  background: lime;
  /* margin:100px 0 20px; */
  height: 10vh;
}
.main{
  background: skyblue;
  /* height: 30vh; */
  /* float : left; */
  /* 자식요소에 있는 float의 높이를 읽어 들일 수는 있지만 margin auto는 적용이 안된다 */
  /* overflow: hidden; */
  /* float처리를 했을 때, 만약 overflow 처리를 하지 않고 높이만 지정하면 float 높이가 늘어나도 같이 늘어나지 않기 때문에 
  float의 높이를 읽어서 적용할 수 있도록 독립적인 BFC영역을 만듦. */
padding: 30px 15px;
}
/* .main::before{ */
  /* 가상요소박스. 가상으로 만들기 위해 반드시 컨텐트 속성을 같이 써야 함 */
  /* content: "첫번째";
  background-color: gray;
  color: white;
  display: block; */
  /* clear: both; 
} */
.clearfix::after{
  content: "";
  background-color: black;
  color : white;
  clear: both;   
  /* 가상요소이기 때문에 인라인 박스에는 적용되지 않음 */
  display: block;
  /* table도 가능하다  */
 }
/* .clearfix{
  clear: both;
  따로 float 처리하지 않았기 때문에 nomalflow
}  */
.group {
  height: 30vh;
  float : left; 
  margin : 0 15px;
}
.group1{
background: rgba(255,255,255,0.5);
/* 뒤에 값이 투명해져서 뒤에 색상이 비쳐 보인다 */
/* float: left; */
/* float는 left나 right만 갖는다
부모 크기 만큼 가질 수 있다 */
/* position: relative; */
/* pos:r + tab */
/* left:-20px; */
width :250px;
/* margin : 15px; */
/* float:right;  group 전체에 left선언이 되어 있기 때문에 right선언을 하면 1만 오른쪽으로 이동하게 되고 margin값 변경되지 않음*/
}
.group2{
  background: hsla(120,70%,60%,0.5);
  /* float: left; */
  /* 그룹1과 다르게 가용할 수 있는 크기만큼 설정이 된다 */
  width:380px;
}
.group3{
  background: tomato;
  /* float: left; */
  /* group3만 float처리가 안되어 있을 경우 1과 2가 3의 위로 뜨면서 3의 인라인 박스가 밀려나서 우측으로 보여짐 */
  /* height: 20vh; */
  width:190px;
}
.slogan{
  background: blueviolet;
  height: 10vh;
  /* clear: both; */
  /* 속성값으로 left, right, both 가능. left는 왼쪽의, right는 오른쪽의, both는 양쪽의 float의 영역침범을 막는다 
  겹쳤던 영역만큼 강제로 마진을 추가하는 방법. 
  !! block 상자에만 쓸 수 있고 inline 상자에는 쓸 수 없다. 에러가 나지는 않고 그냥 무시하고 넘어간다 !! */
  /* margin-top:200px; */
}
.footer-bg{
  background: orange;
}
.footer{
  background: silver;
  height: 10vh;
}
```