``` css
*,*::before,*::after{
  box-sizing: border-box;
}
body{
  background-color: #fff; /* bgc */
  margin: 0;
}
h2{
  margin: 0;
  font-size: 1em;
  font-weight: normal;
}

.wrapper{
background: yellow;
}
.header, .visual, .main, .slogan, .footer{
width: 940px;
margin: 0 auto;
}
.header{
  background: pink;
  height: 10vh;
}
.visual{
  background: lime;
  height: 10vh;
}
.main{
  background: skyblue;
  /* height: 60vh; */
  display: flex;
  /* 세로정렬됨/ 배치하고자 하는 요소 부모에게 적용함 */
  /* flex는 가로나 세로 중심으로 한쪽 정렬이 되기 때문에 다변으로 배치를 원할 경우 한계가 있다 */
  justify-content: space-evenly;
  /* margin을 따로 안써도 여백 자동으로 계산되어 배치됨 */
  /* flex-direction: row; */
  /* 메인축 정렬 */
  /* flex가 어떤 방향으로 정렬되거나 배치되는 기준이 된다. default row는 x로 정렬/ column은 세로 방향은 y축으로 정렬 둘을 mix할 수는 없다*/
  /* flex-wrap: wrap; */
  /* 줄바꿈을 허용할 때 */
  /* flex-flow: wrap row; */
  /* flex-wrap과 flex-direction 축약 옵션 */
  /* justify-content: flex-end; */
  /* 메인축으로 정렬하는 기능 */
  /* x축 기준으로 end방향으로 정렬(오른쪽으로 붙음) */
  /* align-content: flex-end; */
  /* 교차축 정렬(아래축 배치 됨)*/
  /* align-items: flex-end; */
  /* 교차축 정렬/개별적으로 행을 인식하여 아래쪽에 붙음/ 부모만큼 늘어난다 */
  padding :30px 0;
  /* auto는 padding에 사용할 수 없고 margin에만 사용 가능 */
}
.group {
  height: 20vh;
}
.group1{
background: rgba(255,255,255,0.5);
width :250px;
/* order:1; */
/* item에 주는 것이 order. 0이 기본이고 1을 줬을 때 2번 3번 1번의 숫서로 흘러간다 */
}
.group2{
  background: hsla(120,70%,60%,0.5);
  width:380px;
}
.group3{
  background: tomato;
  width:190px;
  /* order: -1; */
  /* flex-direction: column일 때 3번이 최상단으로 올라갈 수 있게 순서 조절 */
}
.slogan{
  background: blueviolet;
  height: 10vh;
}
.footer-bg{
  background: orange;
}
.footer{
  background: silver;
  height: 10vh;
}
```